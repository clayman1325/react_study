DROP DATABASE IF EXISTS twitter_db

CREATE DATABASE twitter_db

show databases;

USE twitter_db;

DROP TABLE IF EXISTS users

CREATE TABLE users (
    user_id INT NOT NULL AUTO_INCREMENT,
    user_handle VARCHAR(50) NOT NULL UNIQUE,
    email_address VARCHAR(50) NOT NULL UNIQUE,
    first_name VARCHAR(100 NOT NULL,
    last_name. VARCHAR(100 NOT NULL,
    phonenumber VARCHAR(100 NOT NULL,
    created_at TIMESTAMP NOT NULL DEFAULT (NOW()),
    PRIMARY_KEY(user_id)
)

-- Primary key must be inmutable, UNIQUE, NOT NULL

-- Intermedia Table helps to take out information decouple info
-- Norm users in one table. Flatten
-- ACID property

DROP TABLE IF EXISTS followers

CREATE TABLE followers (
    follower_id  INT NOT NULL,
    following_id INT NOT NULL,

    FOREIGN_KEY (follower_id) REFERENCES users(user_id)
    FOREIGN_KEY (following_id) REFERENCES users(user_id)
    PRIMARY_KEY(follower_id, following_id)
)

INSERT INTO users ( user_handle, email_address, first_name, last_name, phonenumber)
VALUES
("david", "david@gmail.com", "david", "mejia","1234"),
("david1", "david1@gmail.com", "david", "mejia","1234"),
("david2", "david2@gmail.com", "david", "mejia","1234")

ALTER TABLE followers
ADD CONSTRAINT check_follower_id
CHECK (follower_id <> following_id)

INSERT INTO  followers(follower_id, following_id)
VALUES
(1,2)
(1,1) -- add constraints
(1,3)


SELECT follower_id from followers
SELECT follower_id from followers WHERE folling_id = 1;
SELECT COUNT(follower_id) AS followers from followers WHERE following_id = 1;

SELECT following_id, COUNT(follower_id) AS followers
FROM followers
GROUP_BY following_id
ORDER BY followers DESC
LIMIT 3

SELECT following_id, COUNT(follower_id) AS followers
FROM followers
GROUP_BY following_id
ORDER BY followers DESC
LIMIT 3


