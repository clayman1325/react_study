{"ast":null,"code":"var _jsxFileName = \"/home/david/study/react_study/section_11/01-starting-project/src/store/CartPorvider.js\",\n  _s = $RefreshSig$();\nimport { useReducer } from 'react';\nimport CartContext from \"./cart-context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultCartState = {\n  items: [],\n  totalAmount: 0\n};\nconst cartReducer = (state, action) => {\n  if (action.type == \"ADD\") {\n    const updatedTotalAmount = state.totalAmount + action.item.amount * action.item.price;\n    const existingCartItemIndex = state.items.findIndex(item => {\n      item.id === action.item.id;\n    });\n    const existingCartItem = state.items[existingCartItemIndex];\n    let updatedItems;\n    if (existingCartItem) {\n      const updatedItem = {\n        ...existingCartItem,\n        amount: existingCartItem.amount + action.item.amount\n      };\n      updatedItems = [...state.items];\n      updatedItems[existingCartItemIndex] = updatedItems;\n    } else {\n      updatedItems = state.items.concat(action.item);\n    }\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount\n    };\n  }\n  if (action.type == \"REMOVE\") {}\n  return defaultCartState;\n};\nconst CartProvider = props => {\n  _s();\n  const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartState);\n  const addItemToCartHandler = item => {\n    dispatchCartAction({\n      type: \"ADD\",\n      item: item\n    });\n  };\n  const removeItemFromCartHandler = id => {\n    dispatchCartAction({\n      type: \"REMOVE\",\n      id: id\n    });\n  };\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemToCartHandler,\n    removeItem: removeItemFromCartHandler\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n_s(CartProvider, \"PxEugEseoIJIbjFwtAJal5z5ClY=\");\n_c = CartProvider;\nexport default CartProvider;\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["useReducer","CartContext","defaultCartState","items","totalAmount","cartReducer","state","action","type","updatedTotalAmount","item","amount","price","existingCartItemIndex","findIndex","id","existingCartItem","updatedItems","updatedItem","concat","CartProvider","props","cartState","dispatchCartAction","addItemToCartHandler","removeItemFromCartHandler","cartContext","addItem","removeItem","children"],"sources":["/home/david/study/react_study/section_11/01-starting-project/src/store/CartPorvider.js"],"sourcesContent":["import {useReducer} from 'react'\nimport CartContext from \"./cart-context\"\n\nconst defaultCartState = {\n  items: [],\n  totalAmount: 0,\n\n}\nconst cartReducer = (state, action) => {\n  if(action.type == \"ADD\") {\n    const updatedTotalAmount = state.totalAmount + action.item.amount * action.item.price;\n\n    const existingCartItemIndex = state.items.findIndex((item) => {\n      item.id === action.item.id\n    })\n    const existingCartItem = state.items[existingCartItemIndex];\n\n    let updatedItems;\n\n    if(existingCartItem) {\n      const updatedItem = {\n        ...existingCartItem,\n        amount: existingCartItem.amount + action.item.amount\n      };\n      updatedItems = [...state.items];\n      updatedItems[existingCartItemIndex] = updatedItems\n    } else {\n      updatedItems = state.items.concat(action.item)\n    }\n\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount\n    }\n  }\n\n  if(action.type == \"REMOVE\") {\n  }\n\n  return defaultCartState;\n}\n\nconst CartProvider = props => {\n  const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartState);\n  const addItemToCartHandler = (item) => {\n    dispatchCartAction({type: \"ADD\", item: item})\n  };\n\n  const removeItemFromCartHandler = (id) => {\n    dispatchCartAction({type: \"REMOVE\", id: id})\n  };\n\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemToCartHandler,\n    removeItem: removeItemFromCartHandler\n  }\n\n  return (\n    <CartContext.Provider value={cartContext}>\n      {props.children}\n    </CartContext.Provider>\n  )\n}\n\nexport default CartProvider"],"mappings":";;AAAA,SAAQA,UAAU,QAAO,OAAO;AAChC,OAAOC,WAAW,MAAM,gBAAgB;AAAA;AAExC,MAAMC,gBAAgB,GAAG;EACvBC,KAAK,EAAE,EAAE;EACTC,WAAW,EAAE;AAEf,CAAC;AACD,MAAMC,WAAW,GAAG,CAACC,KAAK,EAAEC,MAAM,KAAK;EACrC,IAAGA,MAAM,CAACC,IAAI,IAAI,KAAK,EAAE;IACvB,MAAMC,kBAAkB,GAAGH,KAAK,CAACF,WAAW,GAAGG,MAAM,CAACG,IAAI,CAACC,MAAM,GAAGJ,MAAM,CAACG,IAAI,CAACE,KAAK;IAErF,MAAMC,qBAAqB,GAAGP,KAAK,CAACH,KAAK,CAACW,SAAS,CAAEJ,IAAI,IAAK;MAC5DA,IAAI,CAACK,EAAE,KAAKR,MAAM,CAACG,IAAI,CAACK,EAAE;IAC5B,CAAC,CAAC;IACF,MAAMC,gBAAgB,GAAGV,KAAK,CAACH,KAAK,CAACU,qBAAqB,CAAC;IAE3D,IAAII,YAAY;IAEhB,IAAGD,gBAAgB,EAAE;MACnB,MAAME,WAAW,GAAG;QAClB,GAAGF,gBAAgB;QACnBL,MAAM,EAAEK,gBAAgB,CAACL,MAAM,GAAGJ,MAAM,CAACG,IAAI,CAACC;MAChD,CAAC;MACDM,YAAY,GAAG,CAAC,GAAGX,KAAK,CAACH,KAAK,CAAC;MAC/Bc,YAAY,CAACJ,qBAAqB,CAAC,GAAGI,YAAY;IACpD,CAAC,MAAM;MACLA,YAAY,GAAGX,KAAK,CAACH,KAAK,CAACgB,MAAM,CAACZ,MAAM,CAACG,IAAI,CAAC;IAChD;IAEA,OAAO;MACLP,KAAK,EAAEc,YAAY;MACnBb,WAAW,EAAEK;IACf,CAAC;EACH;EAEA,IAAGF,MAAM,CAACC,IAAI,IAAI,QAAQ,EAAE,CAC5B;EAEA,OAAON,gBAAgB;AACzB,CAAC;AAED,MAAMkB,YAAY,GAAGC,KAAK,IAAI;EAAA;EAC5B,MAAM,CAACC,SAAS,EAAEC,kBAAkB,CAAC,GAAGvB,UAAU,CAACK,WAAW,EAAEH,gBAAgB,CAAC;EACjF,MAAMsB,oBAAoB,GAAId,IAAI,IAAK;IACrCa,kBAAkB,CAAC;MAACf,IAAI,EAAE,KAAK;MAAEE,IAAI,EAAEA;IAAI,CAAC,CAAC;EAC/C,CAAC;EAED,MAAMe,yBAAyB,GAAIV,EAAE,IAAK;IACxCQ,kBAAkB,CAAC;MAACf,IAAI,EAAE,QAAQ;MAAEO,EAAE,EAAEA;IAAE,CAAC,CAAC;EAC9C,CAAC;EAED,MAAMW,WAAW,GAAG;IAClBvB,KAAK,EAAEmB,SAAS,CAACnB,KAAK;IACtBC,WAAW,EAAEkB,SAAS,CAAClB,WAAW;IAClCuB,OAAO,EAAEH,oBAAoB;IAC7BI,UAAU,EAAEH;EACd,CAAC;EAED,oBACE,QAAC,WAAW,CAAC,QAAQ;IAAC,KAAK,EAAEC,WAAY;IAAA,UACtCL,KAAK,CAACQ;EAAQ;IAAA;IAAA;IAAA;EAAA,QACM;AAE3B,CAAC;AAAA,GAtBKT,YAAY;AAAA,KAAZA,YAAY;AAwBlB,eAAeA,YAAY;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}